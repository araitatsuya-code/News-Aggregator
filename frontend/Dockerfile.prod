# Next.js本番用Dockerfile（静的エクスポート対応）
FROM node:18-alpine AS base

# 依存関係のインストール用ステージ
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# パッケージファイルのコピー
COPY package*.json ./
RUN npm install

# ビルド用ステージ
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.jsアプリケーションのビルド（静的エクスポート）
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
RUN npm run build

# 本番実行用ステージ（Nginx）
FROM nginx:alpine AS runner

# セキュリティ強化：非rootユーザーの作成
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# 静的ファイルのコピー
COPY --from=builder /app/out /usr/share/nginx/html

# Nginx設定ファイルのコピー
COPY nginx.conf /etc/nginx/nginx.conf

# 権限設定
RUN chown -R nextjs:nodejs /usr/share/nginx/html

# ポート公開
EXPOSE 3000

# ヘルスチェック用の設定
RUN echo '{"status": "ok"}' > /usr/share/nginx/html/api/health.json

# Nginx起動
CMD ["nginx", "-g", "daemon off;"]